---
pagetitle: "Diferencias de género en la autoeficacia digital en la escuela en 52 países"
Author: Daniel Miranda, Nicolas Tobar, Tomás Urzúa, Ismael Aguayo y Juan Carlos Castillo
bibliography: ../../../input/bib/icils_nudos.bib
csl: ../../../input/bib/apa.csl

knitr:
  opts_chunk:
    collapse: true
    comment: "#>"
    R.options:
      knitr.graphics.auto_pdf: true
      
format:
  revealjs:
    logo: images/banner_nudos.jpg
    slide-number: true
    theme: [pp.scss]
    title-slide-attributes:
      visibility: false
    transition: zoom
    transition-speed: slow
# data-background-image: images/cover.jpg
# data-background-size: cover
    auto-play-media: true
  pdf:
    format: beamer 
    keep-tex: true  # Debug LaTeX output if needed
editor: visual
---

```{r preparacion}
pacman::p_load(dplyr, haven, psych, purrr, tidyr, sjPlot, ggplot2,
               parameters, table1, beeswarm, lme4, rio, skimr, effects,
               labelled, knitr, kableExtra, stringr, sjmisc, purr, ggbeeswarm,
               sjlabelled, ggrepel,forcats)

options(scipen = 999) 
options(digits = 2)
rm(list = ls()) 

variables_labels <- c(
                 "buscar_info",
                 "evaluar_info",
                 "compartir_info", 
                 "colaboracion_pares",
                 "explicar_info_pares",
                 "editar_texto",
                 "manejar_datos",
                 "crear_presentacion",
                 "manejar_pag_web",
                 "configuracion_privacidad",
                 "selecc_mejor_app",
                 "crear_programa",
                 "hallar_error_programa",
                 "representar_solucion_logica")

pisa22ict <- readRDS("../../../input/proc_data/pisa22ict.rds")

# "No sé" como NA
pisa22ict <- pisa22ict|>
  mutate(across(starts_with("IC183Q0"),~ ifelse(. == 5, NA, .)))

# Recodificación de variables
var_label(pisa22ict) <- list(
  IC183Q01JA = "buscar_info", 
  IC183Q02JA = "evaluar_info", 
  IC183Q03JA = "compartir_info", 
  IC183Q04JA = "colaboracion_pares",
  IC183Q05JA = "explicar_info_pares",
  IC183Q07JA = "editar_texto", 
  IC183Q08JA = "manejar_datos", 
  IC183Q09JA = "crear_presentacion", 
  IC183Q10JA = "manejar_pag_web",
  IC183Q12JA = "configuracion_privacidad",
  IC183Q13JA = "selecc_mejor_app", 
  IC183Q14JA = "crear_programa", 
  IC183Q15JA = "hallar_error_programa", 
  IC183Q16JA = "representar_solucion_logica"
)

pisa22ict <- pisa22ict %>% 
  mutate(OCDE = if_else(CNT %in% c("AUS", "AUT", "BEL", "CHL", "CRI",
                                "CZE", "DNK", "EST", "FIN", "DEU", "GRC", "HUN", "ISL", "IRL", "ISR", "ITA", "JPN", "KOR", "LTU", "LVA", "POL", "SVK", "SVN", "ESP", "SWE", "CHE", "TUR", "GBR", "USA"), 1, 0))

efficacy_variables <- pisa22ict |>
  select(CNT, #Country
         IC183Q01JA, IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA,
         IC183Q07JA, IC183Q08JA, IC183Q09JA, IC183Q10JA, IC183Q12JA,
         IC183Q13JA, IC183Q14JA, IC183Q15JA, IC183Q16JA)

latam_cleaveland <- pisa22ict %>% 
  filter(CNT %in% c("BRA", "ARG", "CRI", "CHL", "DOM", "PAN", "URY", "USA"))



```

::::: columns
::: {.column width="10%"}
![](images/facso.jpg)

![](images/demosal_logo.jpeg)

![](images/qr.png)
:::

::: {.column .column-right width="85%"}
<br>

## **Diferencias de género en la autoeficacia digital en la escuela en 52 países**

------------------------------------------------------------------------

Juan Carlos Castillo, Daniel Miranda, Nicolas Tobar, Ismael Urzúa & Tomás Urzúa

#### Universidad de Chile & Núcleo Milenio de Desigualdades y Oportunidades Digitales (*nudos.cl*)

VIII Seminario Internacional de Desigualdad y Movilidad Social en América Latina- Río de Janeiro 24, 25 y 26 de marzo
:::
:::::

::: notes
Esta ponencia trata principalmente de las desigualdades digitales en la educación, es una especie de agenda diferente de la que he estado participando con otras personas en esta sala en el ámbito de la educación para la ciudadanía, pero creo que la dimensión digital está penetrando cada vez más en diferentes ámbitos de nuestra vida social y en diferentes etapas, y espero en el futuro seguir reforzando el vínculo entre lo cívico y lo digital en la investigación educativa.
:::

## NUDOS {.scrollable}

```{=html}
<iframe width="1000" height="500" src="https://www.nudos.cl/en/sobre-nudos/" title="Webpage example"></iframe>
```

[Más información: nudos.cl](https://www.nudos.cl/sobre-nudos/)

![](images/banner_nudos.jpg){width="80%" fig-align="center"}

![](images/lineas-nudos.png)

::: notes
Un poco de contexto: esta investigación forma parte de un proyecto de investigación sobre Desigualdades y Oportunidades Digitales (proyecto NUDOS) en el que estamos cubriendo áreas como la conectividad, la educación y la política con un amplio equipo de investigadores, más información en nuestra web.
:::

## Punto de inicio

-   Competencias Digitales: "*Grado de conocimientos del funcionamiento y capacidades de las tecnologías para su uso seguro, crítico y responsable, que sirvan al individuo en ámbitos educativos, laborales y sociales*" [@falloonDigitalLiteracyDigital2020].

-   Autoeficacia Digital: "*Juicio introspectivo respecto a el grado de maestría o habilidad percibido para ejecutar acciones que requieran lidiar con situaciones prospectivas en los entornos digitales (hacer arreglos en las acciones para ajustarlas a la búsqueda de un objetivo)*" [@banduraPsychologyHumanAgency2006; @ulfert-blank_assessing_2022].

-   En contextos digitales, las brechas de competencia se cruzan con viejas desigualdades, y aparecen otras nuevas. La autoeficacia es un factor determinante en este ensamblaje [@dijk_digital_2020].

## Autoeficacia Digital y Género

::: {.incremental .highlight-last style="font-size: 130%;"}
-   Las diferencias de género en el uso de las TIC's se ha **atenuado** durante el tiempo [@hargittaiDifferencesActualPerceived2006].

-   Las estudiantes mujeres tienden a presentar menores niveles de confianza pero mayores competencias que los hombres [@punterGenderDifferencesComputer2017].

-   La brecha de género en autoeficacia se produce principalmente en las tareas especializadas o avanzadas (Por sobre las generales o básicas)[@tomteGenderdifferencesSelfefficacyICT2011].
:::

##  {data-background-color="#5f5758"}

::: {style="font-size: 180%; display: flex; justify-content: center; align-items: center"}
*¿De qué manera se comportan las brechas de género en autoeficacia digital?*

*¿Qué diferencias existen entre los países acerca de las brechas de género en autoeficacia digital?*
:::

## Hipótesis

H<sub>1</sub>. Existen dos dimensiones de autoeficacia digital, que se corresponden a un nivel básico y uno avanzado.

H<sub>2</sub>. Las mujeres tienden a presentar mayores niveles de autoeficacia digital general, en cambio los hombres presentan mayores niveles de autoeficacia específica.

H<sub>3</sub>. Las diferencias por género de autoeficacia digital varían entre los países del mundo.

# Datos {data-background-color="#5f5758"}

-   OCDE: Programa para la Evaluación internacional de estudiantes (PISA).
-   `r nrow(pisa22ict)` estudiantes, `r length(unique(pisa22ict$CNTSCHID))` escuelas y `r length(unique(pisa22ict$CNT))` paises.
-   Marco de trabajo Tecnologías de la Información y Comunicación.

## Mediciones de autoeficacia {.smaller}

¿En qué medida eres capaz de realizar las siguientes tareas cuando utilizas <dispositivos digitales>?

::::: columns
::: {.column width="50%"}
-   Buscar y encontrar información relevante en Internet.
-   Evaluar la calidad de la información que has encontrado en Internet.
-   Compartir información práctica con un grupo de estudiantes.
-   Colaborar con otros estudiantes en una evaluación en grupo.
-   Explicar a otros alumnos cómo compartir contenidos digitales en línea o en una plataforma escolar.
-   Redactar o editar un texto para una tarea escolar.
-   Recopilar y registrar datos (por ejemplo, utilizando registradores de datos, Microsoft Access, Google form, hojas de cálculo).
-   Crear una presentación multimedia (con sonido, imágenes y vídeo).
:::

::: {.column width="50%"}
-   Cambiar la configuración de un dispositivo o aplicación para proteger mis datos y privacidad.

-   Seleccionar el programa o app más eficiente que me permita realizar una tarea concreta.

-   Crear, actualizar y mantener una página web o un blog.

-   Crear un programa informático (por ejemplo en Scratch, Python, Java).

-   Identificar el origen de un error en un afeter de software considerando una lista de causas potenciales.

-   Desglosar un problema y representar una solución como una serie de pasos lógicos, como un algoritmo.
:::
:::::

Respuestas: No puedo hacerlo (1), Me cuesta hacerlo solo (2), Puedo hacerlo con un poco de esfuerzo (3), Puedo hacerlo fácilmente (4).

# Resultados {data-background-color="#5f5758"}

## Distribución de promedios

```{r}
beeswarm_plot <- pisa22ict|>
  group_by(CNT)|>
  summarise(mean_geneff = mean(effgen, na.rm = T),
            mean_speceff = mean(effspec, na.rm = T))|>
  ungroup()|>
  pivot_longer(cols = 2:3,
               names_to = "type",
               values_to = "score")

beeswarm_labels <- beeswarm_plot%>%
  group_by(type) %>%
  arrange(score) %>%
  slice(c(1:3, (n() - 2):n())) %>% # First five and last five countries
  ungroup() %>%
  mutate(CNT = to_label(CNT))

  
ggplot(beeswarm_plot, aes(y = score, x = type, color = type)) +
  geom_beeswarm() +
  geom_text_repel(
    data = beeswarm_labels, # Use only the filtered data for labels
    aes(label = CNT), # Add country labels
    hjust = -0.2, vjust = 0.5, size = 3, color = "black"
  ) +
  scale_color_manual(values = c("#fe3057", "#5f5758")) +
  theme_minimal() +
  theme(
    legend.title = element_blank(),
    axis.title.y = element_blank(),
    axis.title.x = element_blank(),
    legend.position = "none"
  ) +
  scale_x_discrete(labels = c("General", "Especializada"))
```

## Puntajes en América Latina

```{r}
# Calculate mean_speceff and mean_geneff by country
data <- latam_cleaveland %>%
  group_by(CNT) %>%
  summarise(
    mean_speceff = mean(effspec, na.rm = TRUE),
    mean_geneff = mean(effgen, na.rm = TRUE)
  ) %>%
  ungroup() %>%
  pivot_longer(
    cols = 2:3,
    names_to = "type",
    values_to = "score"
  ) %>%
  mutate(CNT = to_label(CNT))

# Create a new variable for ordered position within each type
data <- data %>%
  group_by(type) %>%
  arrange(score) %>%
  mutate(posicion = row_number()) %>% # Assign ordered position
  ungroup()

# Define custom facet labels
facet_labels <- c(
  "mean_speceff" = "Autoeficacia Especializada",
  "mean_geneff" = "Autoeficacia General"
)

# Create the plot
ggplot(data, aes(y = reorder(CNT, posicion), x = score)) +
  geom_line(aes(group = CNT), size = 0.8) +
  geom_point(aes(color = type), size = 2.5) +
  facet_wrap(
    ~type, 
    nrow = 2, 
    scales = "free_y", # Allow y-axis to be independent
    labeller = labeller(type = facet_labels) # Custom facet labels
  ) +
  geom_text(
    aes(
      label = round(score, 2), 
      color = type, 
      hjust = ifelse(type == "mean_speceff", 1.2, -0.2) # Adjust hjust based on type
    ),
    vjust = 0.5, size = 3, show.legend = FALSE
  ) +
  scale_color_manual(
    values = c("#5f5758", "#fe3057"),
  ) +
  theme_minimal() +
  theme(
    axis.title.y = element_blank(),
    axis.title.x = element_blank(),
    legend.position = "none"
  )

```
## Diferencias por género

```{r}
pisa22ict |>
  group_by(CNT, sex) |>
  summarise("1. General" = mean(effgen, na.rm = TRUE),
            "2. Especializada" = mean(effspec, na.rm = TRUE)) |>
  pivot_longer(
    cols = 3:4,
    names_to = "type",
    values_to = "score"
  )|>
  ungroup() |>
  mutate(sex = to_label(sex)) |>
  drop_na() |>
  
  ggplot(aes(y = reorder(CNT, score), x = score)) +
  facet_grid(~type) +
  geom_line(aes(group = CNT), size = 0.8) +
  geom_point(aes(color = sex), size = 2.5) +
  scale_color_manual(values = c("#fe3057", "#5f5758")) +
  labs(title = "Promedios en cada país por género",
       color = "Género") +
  theme_minimal() +
  theme(axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        legend.position = "top",
        axis.text.y = element_text(size = 5))

```

## Diferencias de género en América Latina

```{r}
datos_combined <- latam_cleaveland |>
  group_by(CNT, sex) |>
  summarise(
    mean_geneff = mean(effgen, na.rm = TRUE),
    mean_speceff = mean(effspec, na.rm = TRUE)
  ) |>
  ungroup() |>
  mutate(CNT = to_label(CNT),
         sex = to_label(sex)) |>
  drop_na() |>
  pivot_longer(
    cols = starts_with("mean_"), # Combine mean_geneff and mean_speceff into one column
    names_to = "type",
    values_to = "score"
  ) |>
  pivot_wider(
    names_from = sex, 
    values_from = score
  ) |>
  mutate(
    diferencia = Female - Male,
    porc_dif = round((diferencia / Male) * 100, 1),
    etiqueta = ifelse(diferencia > 0, paste0("+", porc_dif, "%"), paste0(porc_dif, "%")),
    valor_mayor = pmax(Male, Female)  # Determina cuál es el valor mayor
  ) |>
  group_by(type) |>
  arrange(Male) |>
  mutate(posicion = row_number()) |>
  mutate(mostrar_etiqueta = posicion <= 3 | posicion > n() - 3) |>
  select(CNT, type, etiqueta, Male, Female, diferencia, porc_dif, valor_mayor, posicion, mostrar_etiqueta)

latam_cleaveland |>
  group_by(CNT, sex) |>
  summarise(mean_speceff = mean(effspec, na.rm = TRUE),
            mean_geneff = mean(effgen, na.rm = TRUE)) |>
  pivot_longer(
    cols = 3:4,
    names_to = "type",
    values_to = "score"
  )|>
  ungroup() |>
  mutate(CNT = to_label(CNT),
         sex = to_label(sex)) |>
  drop_na() |>
  
  ggplot(aes(y = reorder(CNT, score), x = score)) +
  geom_line(aes(group = CNT), size = 0.8) +
  geom_point(aes(color = sex), size = 2.5) +
   facet_wrap(
    ~type, 
    labeller = labeller(type = facet_labels) # Custom facet labels
  ) +
  scale_color_manual(values = c(
    "Female" = "#fe3057", 
    "Male" = "#5f5758"),
                     limits = c("Female", "Male")) +
  labs(
    color = "Género"
  ) +
  theme_minimal() +
  theme(axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        legend.position = "top") +
geom_text(
  data = datos_combined,
  aes(
    y = CNT, 
    x = valor_mayor + 0.01,  # Posicionar a la derecha del punto más alto
    label = etiqueta,
    color = ifelse(startsWith(etiqueta, "+"),"#fe3057", "#5f5758")  # Map color dynamically
  ),
  hjust = -0.1,
  size = 3.5,
  show.legend = FALSE
)
```


## Magnitud de la brecha de género

```{r}
# Calculate the wide-format data and mean_gap
wide_data <- pisa22ict %>%
  group_by(CNT, sex) %>%
  summarise(mean_geneff = mean(effgen, na.rm = TRUE), .groups = 'drop') %>%
  ungroup() %>%
  mutate(CNT = to_label(CNT),
         sex = to_label(sex)) %>%
  drop_na() %>%
  pivot_wider(
    names_from = sex, # Column to use for new column names
    values_from = mean_geneff, # Column to use for values
    names_glue = "score_of_{sex}" # Customize new column names
  ) %>%
  mutate(gap = score_of_Male - score_of_Female) %>%
  mutate(mean_gap = mean(gap)) # Calculate mean_gap

# Extract the mean_gap value
mean_gap_value <- wide_data %>% pull(mean_gap) %>% unique()

# Create the plot
ggplot(wide_data, aes(y = reorder(CNT,-gap), x = gap)) +
  geom_point(aes(group = CNT), size = 3, color = "#fe3057") + # Add points
  geom_vline(xintercept = 0, color = "#5f5758", linetype = "dashed", size = 1) + # Add mean_gap line
  labs(
    title = "Magnitud de la brecha de género en 
    autoeficacia general por país
    ",
  ) +
  theme_minimal() +
  theme(axis.title.y = element_blank(),
        axis.title.x = element_blank())
```

## Magnitud de la brecha de género

```{r}
# Calculate the wide-format data and mean_gap
wide_data <- pisa22ict %>%
  group_by(CNT, sex) %>%
  summarise(mean_spec = mean(effspec, na.rm = TRUE), .groups = 'drop') %>%
  ungroup() %>%
  mutate(CNT = to_label(CNT),
         sex = to_label(sex)) %>%
  drop_na() %>%
  pivot_wider(
    names_from = sex, # Column to use for new column names
    values_from = mean_spec, # Column to use for values
    names_glue = "score_of_{sex}" # Customize new column names
  ) %>%
  mutate(gap = score_of_Female - score_of_Male) %>%
  mutate(mean_gap = mean(gap)) # Calculate mean_gap

# Extract the mean_gap value
mean_gap_value <- wide_data %>% pull(mean_gap) %>% unique()

# Create the plot
ggplot(wide_data, aes(y = reorder(CNT,-gap), x = gap)) +
  geom_point(aes(group = CNT), size = 3, color = "#fe3057") + # Add points
  geom_vline(xintercept = 0, color = "#5f5758", linetype = "dashed", size = 1) + # Add mean_gap line
  labs(
    title = "Magnitud de la brecha de género en autoeficacia 
    específica por país",
  ) +
  theme_minimal() +
  theme(axis.title.y = element_blank(),
        axis.title.x = element_blank())
```

## Correlaciones

```{r proc corr}
library(readxl)

HDI <- readxl::read_excel("./index/HDI.xlsx")
GDI <- readxl::read_excel("./index/GDI.xlsx")
GII <- readxl::read_excel("./index/GII.xlsx")


country_codes <- unique(pisa22ict$CNT)

hdi_filtered <- HDI %>%
  filter(countryIsoCode %in% country_codes) %>%
  select(HDI = value, CNT = countryIsoCode)

gdi_filtered <- GDI %>%
  filter(countryIsoCode %in% country_codes) %>%
  select(CNT = countryIsoCode, GDI = value)

gii_filtered <- GII %>%
  filter(countryIsoCode %in% country_codes) %>%
  select(CNT = countryIsoCode, GII = value)

scatter_data <- pisa22ict %>%
  left_join(hdi_filtered, by = "CNT") %>%
  left_join(gdi_filtered, by = "CNT") %>% 
  left_join(gii_filtered, by = "CNT")


# 1. Calcular brechas de autoeficacia general
brecha_general <- pisa22ict %>%
  # Verificar los valores únicos de sex
  # (Asegúrate que sean exactamente "Male" y "Female" o sus códigos numéricos)
  group_by(CNT, sex) %>%
  summarise(mean_geneff = mean(effgen, na.rm = TRUE), .groups = 'drop') %>%
  # Si sex es numérico, convertir a factor con etiquetas
  mutate(sex = case_when(
    sex == 1 ~ "Female",
    sex == 2 ~ "Male",
    TRUE ~ as.character(sex)
  )) %>%
  pivot_wider(
    names_from = sex,
    values_from = mean_geneff
  ) %>%
  # Calcular brecha (usa los nombres exactos de las columnas creadas por pivot_wider)
  mutate(brecha_general = Female - Male) %>%
  select(CNT, brecha_general)

# 2. Calcular brechas de autoeficacia específica
brecha_especifica <- pisa22ict %>%
  group_by(CNT, sex) %>%
  summarise(mean_spec = mean(effspec, na.rm = TRUE), .groups = 'drop') %>%
  # Si sex es numérico, convertir a factor con etiquetas
  mutate(sex = case_when(
    sex == 1 ~ "Female",
    sex == 2 ~ "Male",
    TRUE ~ as.character(sex)
  )) %>%
  pivot_wider(
    names_from = sex,
    values_from = mean_spec
  ) %>%
  # Calcular brecha (usa los nombres exactos de las columnas creadas por pivot_wider)
  mutate(brecha_especifica = Female - Male) %>%
  select(CNT, brecha_especifica)

# 3. Unir las brechas y los índices
datos_analisis <- brecha_general %>%
  left_join(brecha_especifica, by = "CNT") %>%
  left_join(gdi_filtered, by = "CNT") %>%
  left_join(hdi_filtered, by = "CNT") %>% 
  left_join(gii_filtered, by = "CNT")


```

```{r}
# Define facet labels
facet_labels <- c(
  "brecha_especifica" = "Autoeficacia Especializada",
  "brecha_general" = "Autoeficacia General",
  "HDI" = "I. Desarrollo Humano",
  "GDI" = "I. Desarrollo de Género",
  "GII" = "I. Desigualdades de Género"
)

# Prepare the data
datos_analisis <- datos_analisis %>%
  pivot_longer(
    cols = 2:3,
    names_to = "type",
    values_to = "score"
  ) %>%
  pivot_longer(
    cols = 2:4,
    names_to = "index",
    values_to = "score_index"
  ) %>%
  mutate(
    facet_order = case_when(
      type == "brecha_general" & index == "HDI"  ~ 1,
      type == "brecha_especifica" & index == "HDI"  ~ 4,
      type == "brecha_general" & index == "GDI"  ~ 2,
      type == "brecha_especifica" & index == "GDI"  ~ 5,
      type == "brecha_general" & index == "GII"  ~ 3,
      type == "brecha_especifica" & index == "GII"  ~ 6
    )
  ) %>%
  mutate(
    type = fct_reorder(type, facet_order), # Reorder type based on facet_order
    index = fct_reorder(index, facet_order) # Reorder index based on facet_order
  )

# Create the plot
ggplot(datos_analisis, aes(x = score, y = score_index)) +
  geom_point(color = "grey40", size = 1) +
  facet_grid(
    type ~ index, # Separate facets by type and index
    labeller = labeller(type = facet_labels, index = facet_labels) # Custom facet labels
  ) +
  geom_smooth(method = "lm", se = TRUE, color = "#fe3057") +
  labs(
    y = "Brecha de autoeficacia (M-H)"
  ) +
  theme_minimal()
```

## Discusión

::: {.incremental .highlight-last style="font-size: 130%;"}
H<sub>1</sub>. Los modelos de medición comprueban que hay dos dimensiones en la autoeficacia digital.

H<sub>2</sub>. Las mujeres presentan ventajas en la autoeficacia básica y los hombres en la autoeficacia especializada.

H<sub>3</sub>. Las diferencias por género de autoeficacia digital varían entre los países del mundo.
:::

## Conclusiones

::: {.incremental .highlight-last style="font-size: 200%;"}
-   Hay diferencias de género en los niveles de autoeficacia entre países?

    -   Sí, pero depende del tipo de autoeficacia, así como del país en el que los estudiantes están insertos.
:::

## Próximos pasos {data-background-color="black"}

::: {style="font-size: 180%;"}
-   Análisis de invarianza

-   Explorar determinantes en las diferencias entre países (PIB, OCDE, Indices digitales, etc...)

-   Cruzar datos con otras evaluaciones de gran escala (ICILS, SIMCE, TIMSS)
:::

# Gracias!

-   **Sitio web NUDOS:** [www.nudos.cl](https://www.nudos.cl/)
-   **Repositorio GitHub del proyecto:** <https://github.com/milenio-nudos/pisa_study_cl>

# Anexo

## Descriptivos {.smaller .scrollable}

```{r}
#| eval: false

sjmisc::descr(efficacy_variables, 
      show = c("label", "mean", "sd", "NA.prc", "n"))%>%
      kable(.,"html")%>%
      kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
```

## Análisis factorial general {.scrollable}

```{r}
#| eval: false

fac <- fa(r = efficacy_variables|> select(-CNT),
          nfactors = 2, fm= "pa", rotate="promax")

sjPlot::tab_fa(fac,
               var.labels = variables_labels,
               encoding = "UTF-8")
```

```{r}
#| eval: false

# Group by CNT (código país)
resultados_factoriales <- efficacy_variables %>%
  group_by(CNT) %>%
  group_split() %>%
  map(~ fa(select(.x, -CNT), nfactors = 2, fm = "pa", rotate = "promax"))

# Tabla con todos los resultados por país

tabla_resultados <- map2_dfr(
  resultados_factoriales,
  unique(efficacy_variables$CNT),
  ~ tibble(
    Variable = rownames(.x$loadings),
    CNT = .y,
    CargaFactor1 = .x$loadings[, 1],
    CargaFactor2 = .x$loadings[, 2]
    )
  ) %>%
  arrange(Variable)

tabla_resultados <- tabla_resultados %>% 
  mutate(Factor1 = if_else(CargaFactor1 >0.5, TRUE, FALSE)
) %>% 
  mutate(Factor2 = if_else(CargaFactor2 >0.5, TRUE, FALSE))%>%
  mutate(modelo = case_when(
    Variable %in% c("IC183Q01JA", "IC183Q02JA", "IC183Q03JA", "IC183Q04JA","IC183Q05JA", "IC183Q07JA", "IC183Q08JA", "IC183Q09JA",
"IC183Q12JA", "IC183Q13JA") &
    Factor1 == TRUE ~ TRUE,
    Variable %in% c("IC183Q10JA", "IC183Q14JA", "IC183Q15JA", "IC183Q16JA") &
    Factor2 == TRUE ~ TRUE,
    Variable %in% c("IC183Q01JA", "IC183Q02JA", "IC183Q03JA", "IC183Q04JA","IC183Q05JA", "IC183Q07JA", "IC183Q08JA", "IC183Q09JA",
"IC183Q12JA", "IC183Q13JA") &
    Factor1 == FALSE ~ FALSE,  
    Variable %in% c("IC183Q10JA", "IC183Q14JA", "IC183Q15JA", "IC183Q16JA") &
    Factor2 == FALSE ~ FALSE
))

tabla_resultados %>%
  kable()
```

## Distribución de cargas factoriales por país

Autoeficacia General

```{r}
#| eval: false

ggplot2::ggplot(tabla_resultados, aes(CargaFactor1, Variable)) +
        geom_point() +
        geom_point(
          color="#fe3057"
        )
```

## Distribución de cargas factoriales por país

Autoeficacia Especializada

```{r}
#| eval: false

ggplot2::ggplot(tabla_resultados, aes(CargaFactor2, Variable)) +
        geom_point() +
        geom_point(
          color="#fe3057"
        )
```

```{r}
#| eval: false

tabla_display <- tabla_resultados %>%
  group_by(Variable) %>%
  summarize(
    TRUE_model = sum(modelo == TRUE, na.rm = TRUE),
    FALSE_model = sum(modelo == FALSE, na.rm = TRUE),
    prop_TRUE = TRUE_model / 52,
    prop_FALSE = FALSE_model / 52,
  )%>%
  ungroup()%>%
  mutate(Variable = recode(Variable,
  IC183Q01JA = "buscar_info", 
  IC183Q02JA = "evaluar_info", 
  IC183Q03JA = "compartir_info", 
  IC183Q04JA = "colaboracion_pares",
  IC183Q05JA = "explicar_info_pares",
  IC183Q07JA = "editar_texto", 
  IC183Q08JA = "manejar_datos", 
  IC183Q09JA = "crear_presentacion", 
  IC183Q10JA = "manejar_pag_web",
  IC183Q12JA = "configuracion_privacidad",
  IC183Q13JA = "selecc_mejor_app", 
  IC183Q14JA = "crear_programa", 
  IC183Q15JA = "hallar_error_programa", 
  IC183Q16JA = "representar_solucion_logica"))%>%
  mutate(type = c("Básica","Básica","Básica","Básica","Básica",
                  "Básica","Básica","Básica","Especializada",
                  "Básica","Básica","Especializada",
                  "Especializada","Especializada"))

tabla_display |>
  select(Variable,type,prop_TRUE,TRUE_model,FALSE_model)|>
  kable()
```

## Distribución de cargas factoriales

Proporción de países ajustados al modelo por variable

```{r}
#| eval: false

tabla_resultados|>
  count(Variable,modelo)|>
  mutate(Variable = recode(Variable,
  IC183Q01JA = "buscar_info", 
  IC183Q02JA = "evaluar_info", 
  IC183Q03JA = "compartir_info", 
  IC183Q04JA = "colaboracion_pares",
  IC183Q05JA = "explicar_info_pares",
  IC183Q07JA = "editar_texto", 
  IC183Q08JA = "manejar_datos", 
  IC183Q09JA = "crear_presentacion", 
  IC183Q10JA = "manejar_pag_web",
  IC183Q12JA = "configuracion_privacidad",
  IC183Q13JA = "selecc_mejor_app", 
  IC183Q14JA = "crear_programa", 
  IC183Q15JA = "hallar_error_programa", 
  IC183Q16JA = "representar_solucion_logica"))|>
  
ggplot(aes(y = Variable, x = n, fill = modelo)) +
  geom_bar(position = "fill", stat = "identity") +
  scale_y_discrete(labels = function(x) str_wrap(x, width = 80))+
  scale_fill_manual(values = c("#5f5758", "#fe3057"))+
  theme_minimal()
```

## Distribución de cargas factoriales

Proporción de variables ajustadas al modelo por país

```{r}
#| eval: false

tabla_resultados|>
  mutate(CNT = to_label(CNT))|>
  count(CNT,modelo)|>
  
ggplot(aes(y = CNT, x = n, fill = modelo)) +
  geom_bar(position = "fill", stat = "identity") +
  scale_y_discrete(labels = function(x) str_wrap(x, width = 80))+
  scale_fill_manual(values = c("#5f5758", "#fe3057"))+
  theme_minimal()

```

# Descripción variables autoeficacia

## Concentración de respuestas

```{r}
#| eval: false

# Crear un gráfico de densidad por grupos
ggplot(pisa22ict, aes(x = effgen)) +
  geom_density(alpha = 0.6) +
  labs(title = "Distribución del índice de autoeficacia general",
       x = "Autoeficacia General",
       y = "Densidad") +
  scale_fill_manual(values = c("#5f5758", "#fe3057")) +
  theme_minimal()
```

## Concentración de respuestas

```{r}
#| eval: false

# Crear un gráfico de densidad por grupos
ggplot(pisa22ict, aes(x = effspec)) +
  geom_density(alpha = 0.6) +
  labs(title = "Distribución del índice de autoeficacia especializada",
       x = "Autoeficacia Especializada",
       y = "Densidad") +
  scale_fill_manual(values = c("#5f5758", "#fe3057")) +
  theme_minimal()
```

## Descriptivos generales

```{r}
#| eval: false

table1::table1(~ effgen + effspec, data=pisa22ict, topclass="Rtable1-zebra", caption = "Tabla 1: Estadísticos Descriptivos índice",
               footnote = "Fuente: Elaboración propia con datos de PISA.")

```

## Descriptivos por género

```{r}
#| eval: false

pvalue <- function(x, ...) {
    # Construct vectors of data y, and groups (strata) g
    y <- unlist(x)
    g <- factor(rep(1:length(x), times=sapply(x, length)))
    if (is.numeric(y)) {
        # For numeric variables, perform a standard 2-sample t-test
        p <- t.test(y ~ g)$p.value
    } else {
        # For categorical variables, perform a chi-squared test of independence
        p <- chisq.test(table(y, g))$p.value
    }
    # Format the p-value, using an HTML entity for the less-than sign.
    # The initial empty string places the output on the line below the variable label.
    c("", sub("<", "&lt;", format.pval(p, digits=3, eps=0.001)))
}

table1::table1(~ effgen + effspec | sex, data=pisa22ict|>drop_na(sex)|>mutate(sex = to_label(sex)), topclass="Rtable1-zebra", overall = FALSE, extra.col=list(`P-value`=pvalue), caption = "Tabla 1: Estadísticos Descriptivos índice: Comparación por sexo",
               footnote = "Fuente: Elaboración propia con datos de PISA.")
```

# Modelos de regresión Multinivel

## Tabla de resultados {.smaller}

```{r}
#| eval: false

# Sex as factor
pisa22ict$sexf=as.factor(pisa22ict$sex)
pisa22ict$CNTRYID=to_label(pisa22ict$CNTRYID)


#Autoeficacia General
m2 <- lme4::lmer(effgen~ factor(sex) + (1 | CNTRYID), data = pisa22ict, REML=FALSE)
m2a <- lme4::lmer(effgen~ factor(sex) + (sex | CNTRYID), data = pisa22ict, REML=FALSE)

#Autoeficacia Especializada
m1 <- lme4::lmer(effspec~ factor(sex) + (1 | CNTRYID), data = pisa22ict, REML=FALSE)
m1a <- lme4::lmer(effspec~ factor(sex) + (sex | CNTRYID), data = pisa22ict, REML=FALSE)



sjPlot::tab_model(m2,m2a,m1,m1a,
                  p.style = "stars",
                  dv.labels = c("effgen", "effgen pendiente aleatoria", "effspec", "effspec pendiente aleatoria"),
                  p.threshold = c(0.05, 0.01, 0.001),
                  show.se = FALSE,
                  digits =2)


#anova(m1, m1a)
# Efecto global es -0,11 menos de autoeficacia para hombres.
# Efecto es aleartorio entre países
#anova(m2, m2a)
# Efecto global es 0,14 de autoeficacia a favor de hombres.
# Efecto es aleartorio entre países
# Aunque es positivo en varios países (unos 27), efecto es neutro o negativo en otros.
```

## Efectos entre-países

```{r}
#| eval: false

plot_model(m2a, type="re",
    title = "Modelo aleatorio. Autoeficacia Digital General")
# Aunque es negativo en varios países (unos 26), efecto es neutro o positivo en otros.
# Varibilidad es pequeña
```

## Efectos entre-países

```{r}
#| eval: false

plot_model(m1a, type="re",
    title = "Modelo aleatorio. Autoeficacia Digital Especializada")
# Aunque es positivo en varios países (unos 27), efecto es neutro o negativo en otros.

```

## Modelos OCDE {.smaller}

```{r}
#| eval: false

m3a <- lme4::lmer(effgen~ factor(sex) + factor(OCDE) + (1 | CNTRYID), data = pisa22ict, REML=FALSE)
m3b <- lme4::lmer(effspec~ factor(sex) + factor(OCDE) + (1 | CNTRYID), data = pisa22ict, REML=FALSE)

sjPlot::tab_model(m3a,m3b,
                  p.style = "stars",
                  dv.labels = c("effgen", "effspec"),
                  p.threshold = c(0.05, 0.01, 0.001),
                  show.se = FALSE,
                  digits =2)
```


# Referencias bibliográficas
